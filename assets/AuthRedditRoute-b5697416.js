import{r as m,D as H,A as J,j as Z,l as y,a as tt}from"./index-0c755afe.js";import{I as et}from"./ImportPreview-05f5fe73.js";import"./dataUrls-46e31bfb.js";import"./ScorecardListContext-8dd0923a.js";import"./DataContext-15a18cac.js";import"./index-bbdcde85.js";import"./filterFields-4b2d1b9f.js";import"./rankingRequestData-d3ef79e5.js";import"./LoadingDisplay-17fccc79.js";import"./Box-1f89da6b.js";import"./CircularProgress-c34ed1d6.js";import"./useData-0f8dbacc.js";import"./ScorecardRow-33826ea7.js";import"./ExpandMore-a2879ed8.js";import"./BeltStripe-33bd05c8.js";import"./FieldValue-3a574500.js";import"./EvidenceForm-265a0549.js";import"./Launch-2a9b8482.js";import"./PhotoCamera-d7d7489a.js";import"./LockEntrySearchBox-47514e58.js";import"./Search-0e189b27.js";import"./Select-66c30dfe.js";import"./entryName-8aabe61c.js";import"./BeltStripeMini-ba8f4c3a.js";import"./Autocomplete-4781a408.js";import"./Chip-653352fe.js";import"./TextField-ba969a34.js";import"./LocalizationProvider-fb65bd96.js";import"./index-df98511a.js";import"./DialogContent-9592ab24.js";import"./ListItem-2c00bfb9.js";import"./Dialog-49ca9cb9.js";import"./VideocamOutlined-0d8b74aa.js";import"./FormGroup-6397ee49.js";import"./Checkbox-d758eb5b.js";import"./LoadingDisplaySmall-a14fe506.js";import"./Link-b20d6de9.js";import"./BeltIcon-7566c52b.js";import"./AccordionSummary-acab4d02.js";import"./Collapse-9ba6b13a.js";import"./Link-1429a4d9.js";import"./usePageTitle-358509b1.js";import"./useDocumentTitle-71c12abf.js";const at=/(white|yellow|orange|green|blue|purple|brown|red|black|(\d\d?)[th\s]*dan|dan[th\s]*(\d\d?))\s*(belt)?\s*(approved|granted)/i,rt=/approved|granted|congrat/i,G=[/white/i,/yellow/i,/orange/i,/green/i,/blue/i,/purple/i,/brown/i,/red/i,/black/i,/(\d\d?)[th\s]*dan/i,/dan[th\s]*(\d\d?)/i];function Xt(){const{getBookmarkForRedditUser:b,advanceBookmarkForRedditUser:_,oauthState:h}=m.useContext(H),{user:k}=m.useContext(J),{VITE_REDDIT_CLIENT_ID:n,VITE_REDDIT_CLIENT_SECRET:l}={VITE_LOCAL_DATA:"false",VITE_DISCORD_CLIENT_ID:"1271550138929774725",VITE_DISCORD_CLIENT_SECRET:"CoecO8cx2SyhMq2k3WdWNp-lavxYkeS-",VITE_REDDIT_CLIENT_ID:"i_lvEF-IFPalom2BR_lVjg",VITE_REDDIT_CLIENT_SECRET:"09PAhQfve1tysFh3jQAtmFaG5pWG0A",VITE_DEV_FIRESTORE:"false",VITE_RAFL_VIEW_FORM_ID:"1FAIpQLSf_PQ6XXDYy0cTn_2MeDCwikTOYLRtncPKluFRK-QEYHX0qug",VITE_RAFL_STATE:"hidden",BASE_URL:"/",MODE:"production",DEV:!1,PROD:!0,SSR:!1},e=window.location.href.match(/\?state=([^&]+)&code=([^#]+)#/);let f=e?e[1]:null;const C=f&&f.startsWith("DEBUG_DOWNLOAD");C&&(f=f.slice(14));const O=e?e[2]:null,M=window.location.href.match(/\?state=([^&]+)&error=([^#]+)#/),U=M?M[2]:null,[I,Q]=m.useState(null),[V,Y]=m.useState({}),[X,w]=m.useState(!1),P=m.useRef(!1),q=X||(Object.keys(V).length>0?"complete":!1);return m.useEffect(()=>{async function g(E){if(await h(E,f)){let d=null;try{d=await fetch("https://www.reddit.com/api/v1/access_token",{method:"POST",body:new URLSearchParams({grant_type:"authorization_code",code:encodeURIComponent(O),redirect_uri:`${location.origin}/#/auth/reddit`}).toString(),headers:{Authorization:"Basic "+btoa(n+":"+l),"Content-Type":"application/x-www-form-urlencoded"}})}catch{w("token_failed");return}if(d.status===200){const u=await d.json();Q({token:u.access_token,type:u.token_type})}else d.status===404?w("token_expired"):w("token_failed")}}O&&f&&k.uid&&!P.current?(P.current=!0,g(k.uid)):U&&w("access_denied")},[O,f,U,k,n,l,h]),m.useEffect(()=>{async function g(E,d){let u=null,T=null,p=!1,L=null;try{L=await fetch("https://oauth.reddit.com/api/v1/me",{headers:{authorization:`${E} ${d}`}})}catch{p=!0}L.status===200?u=(await L.json()).name:p=!0;const F=await b(u);let x=null;try{x=await fetch("https://oauth.reddit.com/r/lockpicking/api/flairselector",{method:"POST",headers:{authorization:`${E} ${d}`}})}catch{p=!0}if(x.status===200){const a=(await x.json()).current.flair_text;if(a){const r=a.match(/^Black Belt (\d+)th Dan/),c=a.match(/^(\w+) Belt/);r?T=y(null,r[1]):c&&(T=y(c[1],null))}}else p=!0;const $=100;let N=!1,D=F,j=null,S=null,A=[],B=[];for(;!p&&!N;){const o=D?`&before=${D}`:"",a=j?`&after=${j}`:"",r=`https://oauth.reddit.com/message/inbox?limit=${$}`+o+a;let c=null;try{c=await fetch(r,{headers:{authorization:`${E} ${d}`}})}catch{p=!0}if(c.status===200){const i=(await c.json()).data;i.children.length>0&&(F?(D=i.children.reduce((t,s)=>!t.time||s.data.created_utc>t.time?{time:s.data.created_utc,mark:s.data.name}:t,{}).mark,S=D):(j=i.children.reduce((t,s)=>!t.time||s.data.created_utc<=t.time?{time:s.data.created_utc,mark:s.data.name}:t,{}).mark,S||(S=i.children[0].data.name))),i.children.length<$&&(N=!0);const z=i.children.filter(t=>t.kind==="t4"&&t.data.distinguished==="moderator"&&t.data.subreddit==="lockpicking"),K=z.map(t=>{let s=null;const v=ot(t.data.subject,t.data.body);v&&!tt(v,T)&&(s=v.id);let W=new Date(0);return W.setUTCSeconds(t.data.created_utc),{matchId:s,awardedAt:W.toUTCString(),link:`https://www.reddit.com/message/messages/${t.data.id}`}}).filter(t=>t.matchId);B=[...B,...z],A=[...A,...K]}else p=!0}if(p)w("data_failed");else if(C){const o=B.map(i=>({id:i.data.id,subject:i.data.subject,created_utc:i.data.created_utc,body:i.data.body})),a="data:application/json;base64,"+btoa(JSON.stringify(o)),r=await(await fetch(a)).blob(),c=window.URL.createObjectURL(r),R=document.createElement("a");R.download="reddit-modmail-debug.json",R.href=c,R.click(),window.URL.revokeObjectURL(c),w("debug_download")}else if(A.length>0){const o=Object.values(A.reduce((a,r)=>((!a[r.matchId]||new Date(r.awardedAt)<new Date(a[r.matchId].awardedAt))&&(a[r.matchId]=r),a),{}));await _(u,S,o),Y({username:u,flair:T,awards:o})}else w("none_found");try{await fetch("https://www.reddit.com/api/v1/revoke_token",{method:"POST",body:new URLSearchParams({token:d,token_type_hint:E}).toString(),headers:{Authorization:"Basic "+btoa(n+":"+l),"Content-Type":"application/x-www-form-urlencoded"}})}catch{}}I&&g(I.type,I.token)},[I,_,b,n,l,C]),Z.jsx(et,{syncStatus:q,syncResult:V,service:"Reddit"})}function ot(b,_){const h=_.match(at);if(h){const n=h[2]||h[3];return y(h[1],n)}if(_.match(rt)){let n=G.map(e=>_.match(e));n.some(e=>!!e)||(n=G.map(e=>b.match(e)));const l=n.filter(e=>!!e);if(l.length===1)return y(l[0][0],l[0][1])}return null}export{Xt as default};
